{"version":3,"sources":["components/MyAppBar.js","components/FoodDrawer.js","components/LocateControl.js","components/OneMap.js","App.js","serviceWorker.js","index.js"],"names":["TileSelect","_this","this","react_default","a","createElement","noValidate","autoComplete","FormControl_default","InputLabel_default","Select_default","value","props","selectedTile","onChange","event","onTileChange","MenuItem_default","Component","InfoDialog","_this2","Dialog_default","open","isOpen","aria-labelledby","DialogTitle_default","id","role","aria-label","DialogContent_default","DialogContentText_default","DialogActions_default","style","textDecoration","href","target","rel","Button_default","color","onClick","closeDialog","MyAppBar","_this3","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openInfoDialog","setState","infoDialogOpen","closeInfoDialog","state","_this4","classes","AppBar_default","className","appBar","position","Toolbar_default","IconButton_default","menuButton","toggleFoodDrawer","Menu_default","Typography_default","variant","flex","MyAppBar_TileSelect","aria-haspopup","Info_default","MyAppBar_InfoDialog","withStyles","theme","zIndex","drawer","defineProperty","marginRight","breakpoints","up","display","withTheme","ResponsiveDrawer","totalPlaces","foodList","length","multiOpenStates","forEach","place","locations","name","newState","foodFilter","filterSearch","TextField_default","label","type","margin","filterFood","filterNummberText","foodDrawer","List_default","map","location","index","ListItem_default","button","key","divider","setSelectedPlace","ListItemText_default","primary","secondary","address","handleOpenChange","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","component","disablePadding","dense","inset","Hidden_default","smUp","Drawer_default","foodDrawerOpen","onClose","paper","drawerPaper","drawerHeader","ChevronLeft_default","Divider_default","xsDown","toolbar","width","flexShrink","mixins","maxWidth","objectSpread","alignItems","padding","justifyContent","fontSize","LocateControl","_this$props","options","startDirectly","leaflet","lc","Locate","addTo","start","withLeaflet","OneMap","mapOptions","markers","React","createRef","onRef","mapInstance","leafletElement","selectedMarker","current","openPopup","mapCenter","selectedPlace","tileUrl","ref","Map","e","center","zoom","minZoom","maxZoom","TileLayer","attribution","url","components_LocateControl","strings","title","onActivate","Marker","join","Popup","_map","down","window","screen","FoodList","sort","b","toUpperCase","localeCompare","App","toLowerCase","trim","normaliseString","indexOf","subLocations","filter","undefined","oneMapRef","str","normalize","replace","root","components_MyAppBar","FoodDrawer","components_OneMap","Boolean","hostname","match","WebFont","load","google","families","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a637a82a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Info from '@material-ui/icons/Info';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  flex: {\n    flex: '1 1 auto'\n  }\n});\n\nclass TileSelect extends Component {\n  render() {\n    return (\n      <form noValidate autoComplete=\"off\">\n        <FormControl>\n          <InputLabel>\n            Tile\n        </InputLabel>\n          <Select\n            value={this.props.selectedTile}\n            onChange={event => this.props.onTileChange(event)}\n          >\n            <MenuItem value=\"\">\n              <em>Select Tile</em>\n            </MenuItem>\n            <MenuItem value={'Default'}>Default</MenuItem>\n            <MenuItem value={'Night'}>Night</MenuItem>\n            <MenuItem value={'Grey'}>Grey</MenuItem>\n            <MenuItem value={'Original'}>Original</MenuItem>\n          </Select>\n        </FormControl>\n      </form>\n    );\n  }\n}\n\nclass InfoDialog extends Component {\n  render() {\n    return (\n      <Dialog open={this.props.isOpen} aria-labelledby=\"info-dialog\">\n        <DialogTitle id=\"info-dialog\">\n          About The Makan Zone <span role=\"img\" aria-label=\"emoji\">🍽️🗺️</span>\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            A collection of interesting and delicious food places ranging from \n            hawker centers to cafés and restaurants in Singapore, all displayed \n            on a map.\n            <br />\n            <br />\n            Built with React, Material-UI, Leaflet, OneMap\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <a\n            style={{ textDecoration: 'none' }}\n            href=\"https://www.github.com/arraysius/themakanzone\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Button color=\"primary\">\n              GitHub\n            </Button>\n          </a>\n          <Button onClick={() => this.props.closeDialog()} color=\"secondary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nclass MyAppBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      infoDialogOpen: false\n    }\n  }\n\n  openInfoDialog = () => {\n    this.setState({\n      infoDialogOpen: true\n    });\n  }\n\n  closeInfoDialog = () => {\n    this.setState({\n      infoDialogOpen: false\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <AppBar\n        className={classes.appBar}\n        position=\"fixed\"\n        color=\"default\">\n        <Toolbar>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={() => this.props.toggleFoodDrawer()}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            The Makan Zone\n            {/* <span role=\"img\" aria-label=\"emoji\">🍽️🗺️</span> */}\n          </Typography>\n\n          <div className={classes.flex} />\n\n          <TileSelect\n            selectedTile={this.props.selectedTile}\n            onTileChange={this.props.onTileChange}\n          />\n\n          {/* Info button */}\n          <IconButton\n            aria-haspopup=\"true\"\n            onClick={() => this.openInfoDialog()}\n            color=\"inherit\"\n          >\n            <Info />\n          </IconButton>\n        </Toolbar>\n\n        <InfoDialog\n          isOpen={this.state.infoDialogOpen}\n          closeDialog={this.closeInfoDialog}\n        />\n      </AppBar>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(MyAppBar);\n","import React, { Component } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import Chip from '@material-ui/core/Chip';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    maxWidth: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n  },\n  filterSearch: {\n    margin: '0 auto'\n  },\n  filterNummberText: {\n    fontSize: 16\n  },\n  // chipTag: {\n  //   margin: 2\n  // }\n});\n\nclass ResponsiveDrawer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.totalPlaces = this.props.foodList.length;\n\n    // Insert multi-location dropdown state\n    let multiOpenStates = {}\n    this.props.foodList.forEach(place => {\n      if (place.locations.length > 1) {\n        multiOpenStates[place.name] = false;\n      }\n    });\n\n    this.state = multiOpenStates;\n  }\n\n  handleOpenChange(name) {\n    let newState = this.state;\n    newState[name] = !newState[name];\n    this.setState(newState);\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const foodFilter = (\n      <div className={classes.filterSearch}>\n        <TextField\n          id=\"foodFilter\"\n          label=\"Filter\"\n          type=\"search\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete='off'\n          onChange={event => this.props.filterFood(event)}\n        />\n\n        <Typography\n          className={classes.filterNummberText}\n          variant=\"body1\"\n        >\n          Showing {this.props.foodList.length} of {this.totalPlaces}\n        </Typography>\n      </div>\n    );\n\n    const foodDrawer = (\n      <div>\n        <List>\n          {/* Enumerate food places */}\n          {this.props.foodList.map(place => {\n            if (place.locations.length === 1) {\n              // Single location\n              return (place.locations.map((location, index) =>\n                <ListItem\n                  button\n                  key={place.name + '0'}\n                  divider\n                  onClick={() => this.props.setSelectedPlace([place.name, index, location.position])}>\n                  {/* <Grid direction=\"column\"> */}\n                  <ListItemText\n                    primary={place.name}\n                    secondary={location.address}\n                  />\n\n                  {/* TODO: Chip tags */}\n                  {/* <Chip className={classes.chipTag} variant=\"outlined\" label=\"TAG\" /> */}\n                  {/* </Grid> */}\n                </ListItem>\n              ))\n            } else {\n              // Multiple locations\n              return (\n                <div key={place.name}>\n                  <ListItem\n                    button\n                    divider\n                    onClick={() => this.handleOpenChange(place.name)}\n                  >\n                    <ListItemText\n                      primary={place.name}\n                      secondary={'Multiple Locations'}\n                    />\n                    {this.state[place.name] ? <ExpandLess /> : <ExpandMore />}\n                  </ListItem>\n                  <Collapse in={this.state[place.name]} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                      {place.locations.map((location, index) => (\n                        <ListItem\n                          button\n                          key={place.name + index}\n                          divider\n                          dense\n                          onClick={() => this.props.setSelectedPlace([place.name, index, location.position])}>\n                          <ListItemText inset primary={location.address} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Collapse>\n                </div>\n              )\n            }\n          })}\n        </List>\n      </div>\n    );\n\n    return (\n      <div className={classes.drawer}>\n        {/* Mobile Drawer */}\n        <Hidden smUp>\n          <Drawer\n            variant=\"temporary\"\n            open={this.props.foodDrawerOpen}\n            onClose={this.props.toggleFoodDrawer}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.drawerHeader}>\n              <IconButton onClick={this.props.toggleFoodDrawer}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            {foodFilter}\n            {foodDrawer}\n          </Drawer>\n        </Hidden>\n\n        {/* Desktop Side Panel */}\n        <Hidden xsDown>\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            <div className={classes.toolbar} />\n            {foodFilter}\n            {foodDrawer}\n          </Drawer>\n        </Hidden>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(ResponsiveDrawer);\n","/* https://stackoverflow.com/questions/54099898/react-locate-on-map */\n\nimport { Component } from \"react\";\nimport { withLeaflet } from \"react-leaflet\";\nimport Locate from \"leaflet.locatecontrol\";\n\nclass LocateControl extends Component {\n  componentDidMount() {\n    const { options, startDirectly } = this.props;\n    const { map } = this.props.leaflet;\n\n    const lc = new Locate(options);\n    lc.addTo(map);\n\n    if (startDirectly) {\n      // request location update and set location\n      lc.start();\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withLeaflet(LocateControl);","import React, { Component } from 'react';\n\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport LocateControl from './LocateControl';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n  map: {\n    [theme.breakpoints.down('sm')]: {\n      width: '100vw'\n    },\n    height: '90vh',\n    width: window.screen.width - drawerWidth\n  }\n});\n\nclass OneMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props.mapOptions;\n    this.markers = {}\n    this.props.foodList.forEach(place => {\n      place.locations.forEach((location, index) => {\n        this.markers[place.name + index] = React.createRef();\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.props.onRef(this);\n    this.map = this.mapInstance.leafletElement;\n  }\n\n  openPopup(selectedMarker) {\n    this.markers[selectedMarker[0] + selectedMarker[1]].current.leafletElement.openPopup();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    let mapCenter = this.props.selectedPlace === null ?\n      this.state.position\n      :\n      this.props.selectedPlace[2];\n\n    let tileUrl = 'https://maps-{s}.onemap.sg/v3/' + this.state.selectedTile + '/{z}/{x}/{y}.png';\n\n    // Setup LocateControl options\n    const locateOptions = {\n      position: 'topleft',\n      strings: {\n        title: 'View my location'\n      },\n      onActivate: () => { } // callback before engine starts retrieving locations\n    }\n\n    return (\n      <div ref={(ref) => { this.ref = ref }}>\n        <div className={classes.toolbar} />\n        <Map\n          ref={e => { this.mapInstance = e }}\n          className={classes.map}\n          center={mapCenter}\n          zoom={this.state.zoom}\n          minZoom={11}\n          maxZoom={19}\n        >\n          <TileLayer\n            attribution='<img src=\"https://docs.onemap.sg/maps/images/oneMap64-01.png\" style=\"height:20px;width:20px;\"/> OneMap | Map data © contributors, <a href=\"http://SLA.gov.sg\">Singapore Land Authority</a>'\n            url={tileUrl}\n          />\n          <LocateControl options={locateOptions} />\n\n          {/* Enumerate marker positions */}\n          {this.props.foodList.map(place => (\n            place.locations.map((location, index) => {\n              // console.log(place.name);\n              return (\n                <Marker\n                  ref={this.markers[place.name + index]}\n                  key={place.name + location.position.join(',')}\n                  position={location.position}>\n                  <Popup>\n                    <strong>{place.name}</strong>\n                    <br />\n                    {location.address}\n                  </Popup>\n                </Marker>\n              );\n            })\n          ))}\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(OneMap);\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport MyAppBar from './components/MyAppBar';\nimport FoodDrawer from './components/FoodDrawer';\nimport OneMap from './components/OneMap';\n\nimport FoodList from './foodlist';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\n// Sort food list\nFoodList.sort((a, b) => {\n  return a.name.toUpperCase().localeCompare(b.name.toUpperCase());\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.oneMapRef = React.createRef();\n\n    this.state = {\n      foodList: FoodList,\n      foodDrawerOpen: false,\n      selectedPlace: null,\n      mapOptions: {\n        position: [1.3521, 103.8198],\n        zoom: 12,\n        selectedTile: 'Default'\n      }\n    };\n  }\n\n  onTileChange = event => {\n    if (event.target.value !== \"\") {\n      let newState = this.state;\n      newState.mapOptions.selectedTile = event.target.value;\n      this.setState(newState);\n    }\n  }\n\n  toggleFoodDrawer = () => {\n    let newState = this.state;\n    newState.foodDrawerOpen = !newState.foodDrawerOpen;\n    this.setState(newState);\n  }\n\n  normaliseString(str) {\n    return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n\n  filterFood = event => {\n    let newState = this.state;\n\n    // Filter by name and address\n    newState.foodList = FoodList.map(place => {\n      let name = event.target.value.toLowerCase().trim();\n      if (name === '') {\n        return place;\n      } else if (this.normaliseString(place.name).toLowerCase().indexOf(name) !== -1) {\n        return place;\n      } else {\n        let subLocations = place.locations.filter(location => {\n          return location.address.toLowerCase().indexOf(name) !== -1;\n        });\n\n        if (subLocations.length > 0) {\n          let subPlace = {\n            name: place.name,\n            locations: subLocations\n          };\n\n          return subPlace;\n        }\n\n        return undefined;\n      }\n    });\n\n    // Remove undefined values\n    newState.foodList = newState.foodList.filter(place => place !== undefined);\n\n    this.setState(newState);\n  }\n\n  setSelectedPlace = (place) => {\n    let newState = this.state;\n    newState.foodDrawerOpen = false;\n    newState.selectedPlace = place;\n    if (newState.mapOptions.zoom === 12) { newState.mapOptions.zoom = 17 }\n    this.setState(newState);\n    this.openPopup(place)\n  }\n\n  openPopup(name) {\n    this.oneMapRef.openPopup(name);\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <MyAppBar\n          toggleFoodDrawer={this.toggleFoodDrawer}\n          selectedTile={this.state.mapOptions.selectedTile}\n          onTileChange={this.onTileChange}\n        />\n        <FoodDrawer\n          foodList={this.state.foodList}\n          foodDrawerOpen={this.state.foodDrawerOpen}\n          toggleFoodDrawer={this.toggleFoodDrawer}\n          filterFood={this.filterFood}\n          setSelectedPlace={this.setSelectedPlace}\n        />\n        <OneMap\n          onRef={ref => (this.oneMapRef = ref)}\n          mapOptions={this.state.mapOptions}\n          foodList={this.state.foodList}\n          selectedPlace={this.state.selectedPlace}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n  google: {\n    families: ['Roboto:300,400,500', 'sans-serif']\n  }\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}